   
##Total Cost to Hire K Workers



 long long totalCost(vector<int>& costs, int k, int candidates) {
        int n =costs.size();
        long long ans=0;
        priority_queue<int,vector<int>,greater<int>>pq1,pq2;

        int h=0;
        int i=0,j=n-1;

        while(h<k){
            while(pq1.size()<candidates and i<=j){
                pq1.push(costs[i]);
                i++;
            }

            while(pq2.size()< candidates and j>=i){
                pq2.push(costs[j]);
                j--;
            }

            int a=pq1.size()>0?pq1.top():INT_MAX;
            int b=pq2.size()>0?pq2.top():INT_MAX;

            if(a<=b) {
                ans+=a;
                pq1.pop();
            }

            else{
                ans+=b;
                pq2.pop();
            }
            h++;
        }

        return ans;
    }