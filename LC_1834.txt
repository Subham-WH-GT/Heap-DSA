vector<int> getOrder(vector<vector<int>>& tasks) {
        int n=tasks.size();
        vector<array<int,3>> ST;
        for(int i=0;i<n;i++){
            ST.push_back({tasks[i][0],tasks[i][1],i});
        }

        sort(ST.begin(),ST.end());
        vector<int>ans;

        long long CT=ST[0][0];
        int idx=0;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<> >pq;
        while(idx<n || !pq.empty()){
                if(pq.empty() and CT<ST[idx][0]){
                    CT=ST[idx][0];
                }
            while(idx<n and ST[idx][0] <= CT){
                pq.push( { ST[idx][1],ST[idx][2]});
                idx++;
            }
            pair<int,int>curr=pq.top();
            pq.pop();
            CT+=curr.first;
            ans.push_back(curr.second);
        }
        return ans;
    }